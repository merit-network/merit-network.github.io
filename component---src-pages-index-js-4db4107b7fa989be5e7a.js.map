{"version":3,"sources":["webpack:///./src/components/BlogPosts.js","webpack:///./src/components/HeroIntro.js","webpack:///./src/components/HeroProjects.js","webpack:///./src/pages/index.js"],"names":["PostsEmpty","PostsList","author","posts","className","map","post","index","featuredImgFluid","frontmatter","featuredImage","childImageSharp","fluid","displayAuthor","postAuthor","itemScope","itemType","key","fields","slug","to","itemProp","title","description","excerpt","date","BlogPosts","content","length","HeroProjects","href","pageQuery","IndexPage","data","location","site","siteMetadata","name","allMarkdownRemark","nodes","siteTitle","Layout","SEO","HeroIntro","About"],"mappings":"kNAIMA,EAAa,WACjB,OAAO,oDAGHC,EAAY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC3B,OACE,yBAAKC,UAAU,cACZD,EAAME,KAAI,SAACC,EAAMC,GAAW,IAAD,MACpBC,EAAgB,UACpBF,EAAKG,mBADe,iBACpB,EAAkBC,qBADE,iBACpB,EAAiCC,uBADb,aACpB,EAAkDC,MAE9CC,EAAgBP,EAAKG,YAAYK,YAAcZ,EAErD,OACE,6BACEE,UAAU,YACVW,WAAS,EACTC,SAAS,4BACTC,IAAKX,EAAKY,OAAOC,MAEhBX,GACC,yBAAKJ,UAAU,cACb,kBAAC,OAAD,CAAMgB,GAAId,EAAKY,OAAOC,KAAME,SAAS,OACnC,4BAAQjB,UAAU,SAChB,kBAAC,IAAD,CAAKQ,MAAOJ,OAMpB,yBAAKJ,UAAU,gBACb,wBACEA,UAAU,iCACViB,SAAS,YAET,kBAAC,OAAD,CAAMD,GAAId,EAAKY,OAAOC,KAAME,SAAS,OAClCf,EAAKG,YAAYa,QAGtB,wBACElB,UAAU,wCACViB,SAAS,eAERf,EAAKG,YAAYc,aAAejB,EAAKkB,SAExC,uBAAGpB,UAAU,aACX,4BACGS,GACC,0CACK,kBAAC,OAAD,CAAMO,GAAG,KAAKP,GADnB,YAIDP,EAAKG,YAAYgB,cA+BrBC,EApBG,SAAC,GAAuB,IACpCC,EADezB,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAS3B,OALEwB,EADmB,IAAjBxB,EAAMyB,OACE,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAW1B,OAAQA,EAAQC,MAAOA,IAI5C,6BAASC,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,qBAAqBuB,OC/D/BE,EAfM,WACnB,OACE,6BAASzB,UAAU,0BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,wCACA,wBAAIA,UAAU,iBAAd,4CCkCKyB,EAxCM,WACnB,OACE,6BAASzB,UAAU,iBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,oBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,uBACE0B,KAAK,mCACL1B,UAAU,qBAFZ,wBAUN,yBAAKA,UAAU,UACb,wBAAIA,UAAU,cAAd,iBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,WACb,uBACE0B,KAAK,uCACL1B,UAAU,qBAFZ,wB,wBCEL2B,GAFEC,UAhBG,SAAC,GAAwB,IAAD,MAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBhC,EAAM,UAAG+B,EAAKE,KAAKC,oBAAb,iBAAG,EAAwBlC,cAA3B,aAAG,EAAgCmC,KACzClC,EAAQ8B,EAAKK,kBAAkBC,MAC/BC,GAAY,UAAAP,EAAKE,KAAKC,oBAAV,eAAwBd,QAAxB,QAElB,OACE,kBAACmB,EAAA,EAAD,CAAQP,SAAUA,EAAUZ,MAAOkB,GACjC,kBAACE,EAAA,EAAD,CAAKpB,MAAM,SACX,kBAACqB,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWzC,OAAQA,EAAQC,MAAOA,IAClC,kBAACyC,EAAA,EAAD,QAOgB","file":"component---src-pages-index-js-4db4107b7fa989be5e7a.js","sourcesContent":["import Img from \"gatsby-image\";\nimport React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst PostsEmpty = () => {\n  return <p>No blog posts found.</p>;\n};\n\nconst PostsList = ({ author, posts }) => {\n  return (\n    <div className=\"posts-list\">\n      {posts.map((post, index) => {\n        const featuredImgFluid =\n          post.frontmatter?.featuredImage?.childImageSharp?.fluid;\n        // Use individual author if available, fallback to generic site author\n        const displayAuthor = post.frontmatter.postAuthor || author;\n\n        return (\n          <article\n            className=\"card post\"\n            itemScope\n            itemType=\"http://schema.org/Article\"\n            key={post.fields.slug}\n          >\n            {featuredImgFluid && (\n              <div className=\"card-image\">\n                <Link to={post.fields.slug} itemProp=\"url\">\n                  <figure className=\"image\">\n                    <Img fluid={featuredImgFluid} />\n                  </figure>\n                </Link>\n              </div>\n            )}\n\n            <div className=\"card-content\">\n              <h1\n                className=\"title is-3 mb-3 has-text-black\"\n                itemProp=\"headline\"\n              >\n                <Link to={post.fields.slug} itemProp=\"url\">\n                  {post.frontmatter.title}\n                </Link>\n              </h1>\n              <h2\n                className=\"subtitle is-6 mb-3 mt-0 has-text-dark\"\n                itemProp=\"description\"\n              >\n                {post.frontmatter.description || post.excerpt}\n              </h2>\n              <p className=\"is-size-7\">\n                <em>\n                  {displayAuthor && (\n                    <>\n                      By <Link to=\"/\">{displayAuthor}</Link> on {` `}\n                    </>\n                  )}\n                  {post.frontmatter.date}\n                </em>\n              </p>\n            </div>\n          </article>\n        );\n      })}\n    </div>\n  );\n};\n\nconst BlogPosts = ({ author, posts }) => {\n  let content;\n\n  if (posts.length === 0) {\n    content = <PostsEmpty />;\n  } else {\n    content = <PostsList author={author} posts={posts} />;\n  }\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <div className=\"columns is-centered\">\n          <div className=\"column is-10 mt-6\">{content}</div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default BlogPosts;\n","import React from \"react\";\n\nconst HeroProjects = () => {\n  return (\n    <section className=\"hero is-info is-medium\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title is-2\">Community + Open Source + Technology</h1>\n          <h2 className=\"subtitle is-4\">\n            Our commitment to paying it forward.\n          </h2>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroProjects;\n","import React from \"react\";\n\nconst HeroProjects = () => {\n  return (\n    <section className=\"hero is-light\">\n      <div className=\"hero-body\">\n        <div className=\"container has-text-centered\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <h2 className=\"title is-3\">Explore Projects</h2>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <a\n                    href=\"https://github.com/merit-network\"\n                    className=\"button is-primary\"\n                  >\n                    View All Projects\n                  </a>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"column\">\n              <h2 className=\"title is-3\">Join Our Team</h2>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <a\n                    href=\"https://www.merit.edu/about/careers/\"\n                    className=\"button is-primary\"\n                  >\n                    View Careers\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroProjects;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport About from \"Components/About\";\nimport BlogPosts from \"Components/BlogPosts\";\nimport HeroIntro from \"Components/HeroIntro\";\nimport HeroProjects from \"Components/HeroProjects\";\nimport Layout from \"Components/Layout\";\nimport SEO from \"Components/SEO\";\n\nconst IndexPage = ({ data, location }) => {\n  const author = data.site.siteMetadata?.author?.name;\n  const posts = data.allMarkdownRemark.nodes;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <HeroIntro />\n      <HeroProjects />\n      <BlogPosts author={author} posts={posts} />\n      <About />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        author {\n          name\n        }\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          featuredImage {\n            childImageSharp {\n              fluid(maxWidth: 400) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          tags\n          title\n          postAuthor\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}