{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["PostHeader","author","post","className","itemProp","frontmatter","title","description","excerpt","to","date","PostFeaturedImage","featuredImageByline","featuredImage","childImageSharp","fluid","featuredImageCredit","featuredImageLink","href","target","rel","PostBody","dangerouslySetInnerHTML","__html","html","PostFooter","PostsNav","next","previous","fields","slug","BlogPostTemplate","data","pageContext","location","markdownRemark","postAuthor","site","siteMetadata","name","siteTitle","itemScope","itemType","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-b9485c720f2cc1a1a03e.js","sourcesContent":["import Img from \"gatsby-image\";\nimport React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport About from \"Components/About\";\nimport Layout from \"Components/Layout\";\nimport SEO from \"Components/SEO\";\n\nconst PostHeader = ({ author, post }) => {\n  return (\n    <div className=\"columns is-centered\">\n      <div className=\"column is-7\">\n        <header className=\"block mb-5\">\n          <h1 className=\"title is-1 mb-4 has-text-black\" itemProp=\"headline\">\n            {post.frontmatter.title}\n          </h1>\n          <h2\n            className=\"subtitle is-4 mb-4 mt-1 has-text-dark\"\n            itemProp=\"description\"\n          >\n            {post.frontmatter.description || post.excerpt}\n          </h2>\n          <p className=\"is-size-6\">\n            <em>\n              {author && (\n                <>\n                  By <Link to=\"/\">{author}</Link> on {` `}\n                </>\n              )}\n              {post.frontmatter.date}\n            </em>\n          </p>\n        </header>\n      </div>\n    </div>\n  );\n};\n\nconst PostFeaturedImage = ({ post }) => {\n  const featuredImage = post.frontmatter?.featuredImage?.childImageSharp?.fluid;\n  const featuredImageCredit = post.frontmatter?.featuredImageCredit;\n  const featuredImageLink = post.frontmatter?.featuredImageLink;\n\n  if (!featuredImage) return null;\n\n  let featuredImageByline;\n  if (featuredImageCredit) {\n    if (featuredImageLink) {\n      featuredImageByline = (\n        <a href={featuredImageLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          {featuredImageCredit}\n        </a>\n      );\n    } else {\n      featuredImageByline = featuredImageCredit;\n    }\n  }\n\n  return (\n    <div className=\"columns is-centered mb-6\">\n      <div className=\"column is-10\">\n        <figure className=\"image block\">\n          <Img fluid={featuredImage} />\n        </figure>\n        {featuredImageByline && (\n          <p className=\"has-text-grey is-size-7 mt-0\">\n            <em>Photo by {featuredImageByline}</em>\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst PostBody = ({ post }) => {\n  return (\n    <div className=\"columns is-centered\">\n      <div className=\"column is-7\">\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n      </div>\n    </div>\n  );\n};\n\nconst PostFooter = () => {\n  return (\n    <div className=\"columns is-centered\">\n      <div className=\"column is-10\">\n        <div className=\"mt-6 mb-0\">\n          <hr />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst PostsNav = ({ next, previous }) => {\n  if (!next && !previous) return null;\n\n  return (\n    <>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-10\">\n          <div className=\"level\">\n            <div className=\"level-left\">\n              {previous && (\n                <div className=\"level-item has-text-left\">\n                  <div>\n                    <p className=\"has-text-dark\">Previous:</p>\n                    <p>\n                      <strong>\n                        <Link to={previous.fields.slug} rel=\"prev\">\n                          {previous.frontmatter.title}\n                        </Link>\n                      </strong>\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"level-right\">\n              {next && (\n                <div className=\"level-item has-text-right\">\n                  <div>\n                    <p className=\"has-text-dark\">Next:</p>\n                    <p>\n                      <strong>\n                        <Link to={next.fields.slug} rel=\"next\">\n                          {next.frontmatter.title}\n                        </Link>\n                      </strong>\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"columns is-centered\">\n        <div className=\"column is-10\">\n          <hr className=\"mt-3\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark;\n  const author =\n    post.frontmatter.postAuthor || data.site.siteMetadata?.author?.name;\n  const { previous, next } = pageContext;\n\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        description={post.frontmatter.description || post.excerpt}\n        title={post.frontmatter.title}\n      />\n      <section className=\"section\">\n        <div className=\"container\">\n          <article\n            className=\"blog-post\"\n            itemScope\n            itemType=\"http://schema.org/Article\"\n          >\n            <PostHeader author={author} post={post} />\n            <PostFeaturedImage post={post} />\n            <PostBody post={post} />\n            <PostFooter />\n          </article>\n          <PostsNav next={next} previous={previous} />\n        </div>\n      </section>\n      <About />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        author {\n          name\n        }\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        featuredImageCredit\n        featuredImageLink\n        tags\n        title\n        postAuthor\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}